<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.family.dao.SysUserDAO">
    <resultMap id="BaseResultMap" type="SysUserEntity">
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="dept_id" property="deptId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <!-- 返回时间戳对应mysql字段类型为datetime -->
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!-- 数据库列列表 -->
    <sql id="Base_Column_List">
		user_id, dept_id, username, password, salt, mobile, email, status, create_date
	</sql>

    <!-- 插入SysUser到数据库 -->
    <insert id="insertSysUser" parameterType="SysUserEntity" keyProperty="userId">
		insert into sys_user(dept_id, username, password, salt, mobile, email, status, create_date)
		values(#{deptId}, #{username}, #{password}, #{salt}, #{mobile}, #{email}, #{status}, now())
	</insert>

    <!-- 通过SysUser的id更新SysUser中的数据 -->
    <update id="updateSysUserById" parameterType="SysUserEntity">
        update sys_user
        <set>
            dept_id=#{deptId},
            <if test="username!=null">username=#{username},</if>
            password=#{password}, salt=#{salt}, mobile=#{mobile}, email=#{email}, status=#{status}
        </set>
        <!-- set dept_id=#{deptId}, username=#{username}, password=#{password}, -->
        <!-- salt=#{salt}, mobile=#{mobile}, email=#{email}, status=#{status} -->
        where user_id=#{userId}
    </update>

    <!-- 通过SysUser的id删除SysUser -->
    <delete id="deleteSysUserById" parameterType="long">
		delete from sys_user where user_id=#{userId}
	</delete>

    <!-- 通过username和id查询用户名是否存在 -->
    <select id="selectUsername" parameterType="SysUserEntity" resultType="int">
        select count(*) cn from sys_user
        <where>
            username=#{username}
            <if test="userId!=null">and user_id!=#{userId}</if>
        </where>
    </select>

    <!-- 通过SysUser的id获得SysUser对象 -->
    <select id="selectSysUserById" parameterType="long" resultType="SysUserEntity">
        select
        <include refid="Base_Column_List"/>
        from sys_user where user_id=#{userId}
    </select>

    <!-- 获得SysUser数据集合 -->
    <select id="selectSysUser" parameterType="SysUserDTO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        <where>
            <if test="username != null">username like "%"#{username}"%"</if>
        </where>
    </select>
</mapper>